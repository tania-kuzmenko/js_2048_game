{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["\"use strict\";\n\nlet board = [];\nlet score = 0;\nlet wonGame = false;\nconst tileContainer = document.querySelector(\".tileContainer\");\nconst scoreElement = document.getElementById(\"scoreElement\");\nconst start = document.getElementById(\"start\");\n\nstart.addEventListener(\"click\", startNewGame);\n\nfunction createBoard() {\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 0; j < 4; j++) {\n      row.push(0);\n    }\n    board.push(row);\n  }\n}\n\nfunction addRandomTile() {\n  const emptyTiles = [];\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        emptyTiles.push([i, j]);\n      }\n    }\n  }\n\n  const [randomI, randomJ] =\n    emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n  board[randomI][randomJ] = Math.random() < 0.9 ? 2 : 4;\n  addTileToPage(randomI, randomJ, board[randomI][randomJ]);\n}\n\nfunction addTileToPage(row, column, value) {\n  const tile = document.createElement(\"div\");\n\n  tile.classList.add(\n    \"field-cell\",\n    \"row\" + (row + 1),\n    \"column\" + (column + 1),\n    \"field-cell--\" + value,\n  );\n  tile.innerHTML = value;\n  tileContainer.appendChild(tile);\n  tile.classList.add(\"merged\");\n\n  tile.addEventListener(\"animationend\", function () {\n    tile.classList.remove(\"merged\");\n  });\n}\n\n/* eslint-disable no-unused-vars */\nfunction startNewGame() {\n  start.classList.remove(\"restart\");\n  start.classList.add(\"start\");\n  start.innerHTML = \"Start\";\n  document.querySelector(\".message-start\").classList.add(\"hidden\");\n  document.querySelector(\".message-lose\").classList.add(\"hidden\");\n  document.querySelector(\".message-win\").classList.add(\"hidden\");\n  tileContainer.innerHTML = \"\";\n  scoreElement.innerHTML = 0;\n  board = [];\n  score = 0;\n  wonGame = false;\n  document.addEventListener(\"keydown\", onDirectionKeyPress);\n  createBoard();\n  addRandomTile();\n  addRandomTile();\n}\n\n/* eslint-enable no-unused-vars */\n\nfunction onDirectionKeyPress(gameEvent) {\n  let movePossible;\n\n  switch (gameEvent.key) {\n    case \"ArrowUp\":\n      movePossible = moveTiles(1, 0);\n      break;\n    case \"ArrowDown\":\n      movePossible = moveTiles(-1, 0);\n      break;\n    case \"ArrowLeft\":\n      movePossible = moveTiles(0, -1);\n      break;\n    case \"ArrowRight\":\n      movePossible = moveTiles(0, 1);\n      break;\n  }\n\n  if (movePossible) {\n    addRandomTile();\n\n    const gameOver = isGameOver();\n\n    if (gameOver.gameOver) {\n      showAlert(gameOver.message);\n    }\n  }\n}\n\nfunction moveTiles(directionY, directionX) {\n  let movePossible = false;\n  let mergedRecently = false;\n\n  if (directionX !== 0) {\n    const startX = directionX === 1 ? 3 : 0;\n    const stepX = directionX === 1 ? -1 : 1;\n\n    for (let i = 0; i < 4; i++) {\n      let j = startX;\n      /* eslint-disable no-unmodified-loop-condition */\n\n      while ((j <= 3 && stepX === 1) || (j >= 0 && stepX === -1)) {\n        if (board[i][j] === 0) {\n          j += stepX;\n          continue;\n        }\n\n        const destination = getDestinationSquare(i, j, 0, directionX);\n        const tileClass = \".row\" + (i + 1) + \".column\" + (j + 1);\n        const tile = document.querySelector(tileClass);\n\n        if (!destination.merge || (destination.merge && mergedRecently)) {\n          mergedRecently = false;\n          destination.destinationX += destination.merge ? stepX : 0;\n          board[i][destination.destinationX] = board[i][j];\n\n          if (destination.destinationX !== j) {\n            movePossible = true;\n            board[i][j] = 0;\n          }\n          moveTileOnPage(i, destination.destinationX, tile, false);\n          j += stepX;\n          continue;\n        }\n        mergedRecently = true;\n        board[i][destination.destinationX] = board[i][j] * 2;\n        score += board[i][destination.destinationX];\n        scoreElement.innerHTML = score;\n\n        if (score === 4 || score === 8) {\n          start.classList.remove(\"start\");\n          start.classList.add(\"restart\");\n          start.innerHTML = \"Restart\";\n        }\n        movePossible = true;\n        board[i][j] = 0;\n        moveTileOnPage(i, destination.destinationX, tile, destination.merge);\n        j += stepX;\n      }\n    }\n  } else if (directionY !== 0) {\n    const startY = directionY === 1 ? 3 : 0;\n    const stepY = directionY === 1 ? -1 : 1;\n\n    for (let j = 0; j < 4; j++) {\n      let i = startY;\n\n      while ((i <= 3 && stepY === 1) || (i >= 0 && stepY === -1)) {\n        if (board[i][j] === 0) {\n          i += stepY;\n          continue;\n        }\n\n        const destination = getDestinationSquare(i, j, directionY, 0);\n        const tileClass = \".row\" + (i + 1) + \".column\" + (j + 1);\n        const tile = document.querySelector(tileClass);\n\n        if (!destination.merge || (destination.merge && mergedRecently)) {\n          mergedRecently = false;\n          destination.destinationY += destination.merge ? stepY : 0;\n          board[destination.destinationY][j] = board[i][j];\n\n          if (destination.destinationY !== i) {\n            movePossible = true;\n            board[i][j] = 0;\n          }\n          moveTileOnPage(destination.destinationY, j, tile, false);\n          i += stepY;\n          continue;\n        }\n        mergedRecently = true;\n        board[destination.destinationY][j] = board[i][j] * 2;\n        score += board[destination.destinationY][j];\n        scoreElement.innerHTML = score;\n        movePossible = true;\n        board[i][j] = 0;\n        moveTileOnPage(destination.destinationY, j, tile, destination.merge);\n        i += stepY;\n      }\n    }\n  }\n\n  return movePossible;\n}\n\nfunction getDestinationSquare(i, j, directionY, directionX) {\n  let destinationY = i;\n  let destinationX = j;\n  let merge = false;\n\n  while (\n    (destinationY < 3 && directionY === 1) ||\n    (destinationY > 0 && directionY === -1) ||\n    (destinationX < 3 && directionX === 1) ||\n    (destinationX > 0 && directionX === -1)\n  ) {\n    const nextY = destinationY + directionY;\n    const nextX = destinationX + directionX;\n    const nextCell = board[nextY][nextX];\n    const currentCell = board[i][j];\n\n    if (nextCell === 0 || nextCell === currentCell) {\n      destinationY = nextY;\n      destinationX = nextX;\n      merge = nextCell === currentCell;\n    }\n\n    if (nextCell === 0 || nextCell === currentCell) {\n      destinationY = nextY;\n      destinationX = nextX;\n      merge = nextCell === currentCell;\n    }\n\n    if (nextCell !== 0 && nextCell !== currentCell) {\n      break;\n    }\n\n    if (merge) {\n      break;\n    }\n  }\n\n  return {\n    merge: merge,\n    destinationY: destinationY,\n    destinationX: destinationX,\n  };\n}\n\n/* eslint-enable no-unused-vars */\n\nfunction moveTileOnPage(row, column, tile, merge) {\n  const classes = Array.from(tile.classList);\n\n  classes.forEach((className) => {\n    if (className.startsWith(\"row\") || className.startsWith(\"column\")) {\n      tile.classList.remove(className);\n    }\n  });\n  tile.classList.add(\"row\" + (row + 1), \"column\" + (column + 1));\n\n  if (merge) {\n    let elements = tileContainer.querySelectorAll(\n      \".row\" + (row + 1) + \".column\" + (column + 1),\n    );\n\n    while (elements.length > 1) {\n      tileContainer.removeChild(elements[0]);\n\n      elements = tileContainer.querySelectorAll(\n        \".row\" + (row + 1) + \".column\" + (column + 1),\n      );\n    }\n\n    elements[0].className =\n      \"field-cell \" +\n      \"row\" +\n      (row + 1) +\n      \" column\" +\n      (column + 1) +\n      \" \" +\n      \"field-cell--\" +\n      board[row][column];\n    elements[0].innerHTML = board[row][column];\n    elements[0].classList.add(\"merged\");\n\n    elements[0].addEventListener(\"animationend\", function () {\n      tile.classList.remove(\"merged\");\n    });\n  }\n}\n\nfunction isGameOver() {\n  let emptySquare = false;\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        emptySquare = true;\n      }\n\n      if (board[i][j] === 2048 && !wonGame) {\n        return {\n          gameOver: true,\n          message: \"You won!\",\n        };\n      }\n\n      if (j !== 3 && board[i][j] === board[i][j + 1]) {\n        emptySquare = true;\n      }\n\n      if (i !== 3 && board[i][j] === board[i + 1][j]) {\n        emptySquare = true;\n      }\n    }\n  }\n\n  if (emptySquare) {\n    return {\n      gameOver: false,\n      message: \"\",\n    };\n  }\n\n  return {\n    gameOver: true,\n    message: \"Game over!\",\n  };\n}\n\nfunction showAlert(message) {\n  if (message === \"Game over!\") {\n    document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n  }\n\n  if (message === \"You won!\") {\n    wonGame = true;\n\n    document.querySelector(\".message-win\").classList.remove(\"hidden\");\n\n    document.removeEventListener(\"keydown\", onDirectionKeyPress);\n  }\n}\n\nlet touchStartX = 0;\nlet touchStartY = 0;\n\ndocument.addEventListener(\"touchstart\", onTouchStart);\ndocument.addEventListener(\"touchend\", onTouchEnd);\n\nfunction onTouchStart(touchEvent) {\n  touchStartX = touchEvent.touches[0].clientX;\n  touchStartY = touchEvent.touches[0].clientY;\n}\n\nfunction onTouchEnd(touchEvent) {\n  let movePossible;\n  const touchEndX = touchEvent.changedTouches[0].clientX;\n  const touchEndY = touchEvent.changedTouches[0].clientY;\n  const deltaX = touchEndX - touchStartX;\n  const deltaY = touchEndY - touchStartY;\n\n  const swipeThreshold = 50;\n\n  if (Math.abs(deltaX) > Math.abs(deltaY)) {\n    // Horizontal swipe\n    if (Math.abs(deltaX) > swipeThreshold) {\n      if (deltaX > 0) {\n        movePossible = moveTiles(0, 1);\n      } else {\n        movePossible = moveTiles(0, -1);\n      }\n    }\n  } else {\n    // Vertical swipe\n    if (Math.abs(deltaY) > swipeThreshold) {\n      if (deltaY > 0) {\n        movePossible = moveTiles(-1, 0);\n      } else {\n        movePossible = moveTiles(1, 0);\n      }\n    }\n  }\n\n  if (movePossible) {\n    addRandomTile();\n\n    const gameOver = isGameOver();\n\n    if (gameOver.gameOver) {\n      showAlert(gameOver.message);\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}